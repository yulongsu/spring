package cn.su.study.reflection;import java.lang.reflect.ParameterizedType;import java.lang.reflect.Type;public class Param<T1, T2> {    class A<T2> {    }    class B extends A<T2> {    }    private Class<T1> entityClass;    public Param() {        Type type = this.getClass().getGenericSuperclass();        System.out.println("getClass() == " + getClass());        System.out.println("type = " + type);        if (type instanceof ParameterizedType) {            ParameterizedType parameterizedType = (ParameterizedType)type;            Type trueType = parameterizedType.getActualTypeArguments()[0];            System.out.println("trueType1 = " + trueType);            trueType = parameterizedType.getActualTypeArguments()[1];            System.out.println("trueType2 = " + trueType);            this.entityClass = (Class<T1>)trueType;            System.out.println("Class<T1> = " + entityClass);        }        B b = new B();        type = b.getClass().getGenericSuperclass();        System.out.println("B is A's super class :" + ((ParameterizedType)type).getActualTypeArguments().length);        System.out.println("getActualTypeArguments :" + ((ParameterizedType)type).getActualTypeArguments()[0]);    }}